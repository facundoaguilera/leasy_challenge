services:
  web:
    build: .
    command: ./entrypoint.sh gunicorn leasy_challenge.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  redis:
    image: redis:7
    ports:
      - "6379:6379"

  worker:
    build: .
    command: python manage.py rqworker default
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - redis
      - db

  cron:
    build: .
    container_name: cron_service
    volumes:
      - .:/app
    env_file:
      - .env
    command: >
      sh -c "cp cronjob /etc/cron.d/generate_invoices &&
             chmod 0644 /etc/cron.d/generate_invoices &&
             crontab /etc/cron.d/generate_invoices &&
             touch /var/log/cron.log &&
             cron -f"
    depends_on:
      - db
      - redis

volumes:
  postgres_data: